apiVersion: v1
kind: Namespace
metadata:
  name: nexabuilder
  labels:
    name: nexabuilder
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexabuilder-app
  namespace: nexabuilder
  labels:
    app: nexabuilder
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: nexabuilder
  template:
    metadata:
      labels:
        app: nexabuilder
        version: v1
    spec:
      containers:
      - name: nexabuilder
        image: 470880515336.dkr.ecr.us-east-1.amazonaws.com/nexabuilder:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: NEXT_TELEMETRY_DISABLED
          value: "1"
        - name: NEXT_PUBLIC_APP_NAME
          value: "Nexa Builder"
        - name: NEXT_PUBLIC_BASE_URL
          value: "__NEXTAUTH_URL__"
        - name: DATABASE_URL
          value: "__DATABASE_URL__"
        - name: DB_HOST
          value: "__DB_HOST__"
        - name: DB_PORT
          value: "__DB_PORT__"
        - name: DB_NAME
          value: "__DB_NAME__"
        - name: DB_USERNAME
          value: "__DB_USERNAME__"
        - name: DB_PASSWORD
          value: "__DB_PASSWORD__"
        - name: NEXTAUTH_SECRET
          value: "__NEXTAUTH_SECRET__"
        - name: NEXTAUTH_URL
          value: "__NEXTAUTH_URL__"
        - name: OPENAI_API_KEY
          value: "__OPENAI_API_KEY__"
        - name: AWS_REGION
          value: "us-east-1"
        - name: LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
            httpHeaders:
            - name: Accept
              value: application/json
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 12
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: nexabuilder-service
  namespace: nexabuilder
  labels:
    app: nexabuilder
spec:
  selector:
    app: nexabuilder
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
  sessionAffinity: None
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nexabuilder-ingress
  namespace: nexabuilder
  labels:
    app: nexabuilder
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/target-type: "ip"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/healthcheck-path: '/api/health'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
spec:
  rules:
  - host: dev.nexabuilder.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nexabuilder-service
            port:
              number: 80
